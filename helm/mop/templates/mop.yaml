apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: {{ .Values.mop.name }}
  name: {{ .Values.mop.name }}
  namespace: default
spec:
  selector:
    matchLabels:
      app: {{ .Values.mop.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.mop.name }}
    spec:
      initContainers:
        - name: maintenance-queue
          image: alpine:3.12
          command:
            - sh
            - -c
            - >-
              touch /var/maintenance-required;
              until test -f /var/maintenance-in-progress; do
                  echo "waiting in the maintenance queue";
                  sleep 5;
              done;
          volumeMounts:
            - name: var
              mountPath: /var
        - name: {{ .Values.mop.name }}-get-script
          image: curlimages/curl:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - >-
              curl -fSL -o {{ .Values.mop.everyoneWriteablePath }}/mop-{{ .Values.mop.name }}.sh {{ .Values.mop.targetScript }};
          volumeMounts:
            - name: script-write-path
              mountPath: {{ .Values.mop.everyoneWriteablePath }}
      containers:
        - name: {{ .Values.mop.name }}
          image: alpine:3.12
          command:
            - sh
            - -c
            - >-
              chmod +x {{ .Values.mop.everyoneWriteablePath }}/mop-{{ .Values.mop.name }}.sh;
              echo -e >/etc/cron.d/mop "* * * * * root sh -c 'rm -f /etc/cron.d/mop; {{ .Values.mop.everyoneWriteablePath }}/mop-{{ .Values.mop.name }}.sh && rm -f /var/maintenance-required' >/var/log/mop-{{ .Values.mop.name }}.log 2>&1";
              until test -f /var/log/mop-{{ .Values.mop.name }}.log; do
                  echo "waiting for cron to execute {{ .Values.mop.everyoneWriteablePath }}/mop-{{ .Values.mop.name }}.sh"
                  sleep 5
              done;
              tail -f /var/log/mop-{{ .Values.mop.name }}.log;
          volumeMounts:
            - name: var
              mountPath: /var
            - name: var-log
              mountPath: /var/log
            - name: node-crond
              mountPath: /etc/cron.d
            - name: script-write-path
              mountPath: {{ .Values.mop.everyoneWriteablePath }}
      nodeSelector:
        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 0
      volumes:
        - hostPath:
            path: /var
          name: var
        - hostPath:
            path: /var/log
          name: var-log
        - hostPath:
            path: /etc/cron.d
          name: node-crond
        - hostPath:
            path: {{ .Values.mop.everyoneWriteablePath }}
          name: script-write-path
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
          effect: NoSchedule
