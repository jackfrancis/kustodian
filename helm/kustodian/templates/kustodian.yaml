---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Values.kustodian.name }}
rules:
  # Allow kustodian to read spec.unschedulable
  # Allow kubectl to drain/uncordon
  #
  # NB: These permissions are tightly coupled to the bundled version of kubectl; the ones below
  # match https://github.com/kubernetes/kubernetes/blob/v1.19.4/staging/src/k8s.io/kubectl/pkg/cmd/drain/drain.go
  #
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "patch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["list", "delete", "get"]
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    verbs: ["get"]
  - apiGroups: [""]
    resources: ["pods/eviction"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.kustodian.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.kustodian.name }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.kustodian.name }}
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: kube-system
  name: {{ .Values.kustodian.name }}
rules:
  # Allow kustodian to lock/unlock itself
  - apiGroups: ["apps"]
    resources: ["daemonsets"]
    resourceNames: ["{{ .Values.kustodian.name }}"]
    verbs: ["update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: kube-system
  name: {{ .Values.kustodian.name }}
subjects:
  - kind: ServiceAccount
    namespace: kube-system
    name: {{ .Values.kustodian.name }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Values.kustodian.name }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.kustodian.name }}
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.kustodian.name }} # Must match `--ds-name`
  namespace: kube-system # Must match `--ds-namespace`
spec:
  selector:
    matchLabels:
      name: {{ .Values.kustodian.name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ .Values.kustodian.name }}
        app: {{ .Values.kustodian.name }}
    spec:
      serviceAccountName: {{ .Values.kustodian.name }}
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
          effect: NoSchedule
      restartPolicy: Always
      containers:
        - name: {{ .Values.kustodian.name }}
          image: {{ template "image.full" .Values.kustodian.container }}
          imagePullPolicy: Always
          env:
            # Pass in the name of the node on which this pod is scheduled
            # for use with drain/uncordon operations and lock acquisition
            - name: KUSTODIAN_NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - /usr/bin/kustodian
            #            - --ds-name=kustodian
            #            - --ds-namespace=kube-system
            #            - --end-time=23:59:59
            #            - --lock-annotation=k8s.io/kustodian-node-lock
            - --period=1m
            #            - --reboot-days=sun,mon,tue,wed,thu,fri,sat
            #            - --maintenance-sentinel=/var/maintenance-required
            #            - --start-time=0:00
            #            - --time-zone=UTC
            - --annotate-nodes=true
          volumeMounts:
            - name: var
              mountPath: /var
          resources:
            requests:
              cpu: 5m
              memory: 16Mi
            limits:
              cpu: 10m
              memory: 32Mi
      volumes:
        - hostPath:
            path: /var
          name: var
      nodeSelector:
        kubernetes.io/os: linux
