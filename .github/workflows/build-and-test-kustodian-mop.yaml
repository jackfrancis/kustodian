name: Build and test kustodian + mop
on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Identify image by this tag'
        required: true
  pull_request_target:
    branches:
      - main
jobs:
  build-and-test-kustodian-mop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: login to GitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: assign tag based on manual input
        run: echo "RELEASE_VERSION=${{github.event.inputs.image_tag}}-canary" >> $GITHUB_ENV
        if: ${{github.event.inputs.image_tag != ''}}
      - name: assign tag automatically based on current commit sha
        run: echo "RELEASE_VERSION=$(git rev-parse --short "$GITHUB_SHA")-canary" >> $GITHUB_ENV
        if: ${{github.event.inputs.image_tag == ''}}
      - name: install go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
      - name: build kustodian binary
        run: make cmd/kustodian/kustodian
      - name: setup buildx
        uses: docker/setup-buildx-action@v2
      - name: login to GitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: cmd/kustodian/Dockerfile
          tags: |
            ghcr.io/jackfrancis/kustodian/kustodian:${{ env.RELEASE_VERSION }}
      - name: install helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
      - name: install k
        run: |
          sudo curl -o /usr/local/bin/k https://raw.githubusercontent.com/jakepearson/k/master/k
          sudo chmod +x /usr/local/bin/k
      - name: checkout capz
        uses: actions/checkout@v2
        with:
          repository: kubernetes-sigs/cluster-api-provider-azure
          path: capz
          ref: v1.5.0
      - name: run capz E2E
        env:
          AZURE_LOCATION: "eastus"
          GINKGO_FOCUS: "Creating an AKS cluster"
          SKIP_CLEANUP: "true"
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
        run: ./scripts/ci-e2e.sh
        working-directory: capz
